from sqlalchemy import create_engine
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from config import DB_USER, DB_PASS

In [2]:
engine = create_engine(f"postgresql://{DB_USER}:{DB_PASS}@localhost/employee_db")
conn = engine.connect()

In [3]:
salaries = pd.read_sql("SELECT * FROM salaries", conn)
salaries.head()
Out[3]:
emp_no	salary	from_date	to_date
0	10001	60117	1986-06-26	1987-06-26
1	10002	65828	1996-08-03	1997-08-03
2	10003	40006	1995-12-03	1996-12-02
3	10004	40054	1986-12-01	1987-12-01
4	10005	78228	1989-09-12	1990-09-12

In [4]:
titles = pd.read_sql("SELECT * FROM titles", conn)
titles.head()

Out[4]:
emp_no	title	from_date	to_date
0	10001	Senior Engineer	1986-06-26	9999-01-01
1	10002	Staff	1996-08-03	9999-01-01
2	10003	Senior Engineer	1995-12-03	9999-01-01
3	10004	Engineer	1986-12-01	1995-12-01
4	10004	Senior Engineer	1995-12-01	9999-01-01

In [5]:
merged = pd.merge(salaries, titles, on="emp_no", how="inner")
merged.head()

Out[5]:
emp_no	salary	from_date_x	to_date_x	title	from_date_y	to_date_y
0	10001	60117	1986-06-26	1987-06-26	Senior Engineer	1986-06-26	9999-01-01
1	10002	65828	1996-08-03	1997-08-03	Staff	1996-08-03	9999-01-01
2	10003	40006	1995-12-03	1996-12-02	Senior Engineer	1995-12-03	9999-01-01
3	10004	40054	1986-12-01	1987-12-01	Engineer	1986-12-01	1995-12-01
4	10004	40054	1986-12-01	1987-12-01	Senior Engineer	1995-12-01	9999-01-01

In [6]:
grouped = merged.groupby("title").mean()
grouped

Out[6]:
emp_no	salary
title		
Assistant Engineer	251495.398533	48493.204786
Engineer	252943.159987	48539.781423
Manager	110780.833333	51531.041667
Senior Engineer	253034.375949	48506.751806
Senior Staff	253423.367183	58503.286614
Staff	253399.240672	58465.271904
Technique Leader	251708.951052	48580.505772

In [7]:
title_salary_df = grouped.drop(columns = "emp_no")
title_salary_df

Out[7]:
salary
title	
Assistant Engineer	48493.204786
Engineer	48539.781423
Manager	51531.041667
Senior Engineer	48506.751806
Senior Staff	58503.286614
Staff	58465.271904
Technique Leader	48580.505772

In [8]:
title_salary_df = title_salary_df.reset_index()
title_salary_df

Out[8]:
title	salary
0	Assistant Engineer	48493.204786
1	Engineer	48539.781423
2	Manager	51531.041667
3	Senior Engineer	48506.751806
4	Senior Staff	58503.286614
5	Staff	58465.271904
6	Technique Leader	48580.505772

In [9]:
x_axis = title_salary_df["title"]
ticks = np.arange(len(x_axis))
y_axis = title_salary_df["salary"]
 
plt.bar(x_axis, y_axis, align="center", alpha=1.0, color=["pink", "b", "r", "orange", "y", "b", "g"])

plt.xticks(ticks, x_axis, rotation="vertical")

plt.ylabel("Salaries ($)")
plt.xlabel("Employee Title")
plt.title("Average Employee Salary by Title")

plt.savefig("../Images/avg_salary_by_title.png")

plt.show()

Out [9] I attached graph seperately

#  Report
## Data Modeling - I inspected the CSVs, then I made an Entity Relationship Diagram (ERD) of the tables for the employee database, using a tool called Quick Database Diagrams. 
## Data Engineering - I exported the ERD to PostgreSQL, which then made a table schema for each CSV file, showing the specified data types, primary keys and foreign keys for each respective table.
## Data Analysis - I queried the Employee Database, utilizing the questions proposed. I imported the SQL Database into Pandas, by creating an engine. Performed data manipulation in preparation for visualaization. Visualized data in a bar chart.